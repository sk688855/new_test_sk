[tool.poetry]
name = "testzeus-hercules"
version = "0.1.0"
description = "Hercules: The World's First Open-Source AI Agent for End-to-End Testing"
authors = ["Shriyansh Agnihotri <shriyansh@testzeus.com>"]
readme = "README.md"
homepage = "https://testzeus.com/hercules"
repository = "https://github.com/testzeus/testzeus-hercules"
documentation = "https://testzeus.com/hercules/docs"
keywords = ["AI", "end-to-end testing", "automation", "Hercules", "TestZeus"]
exclude = [
    "scout/screen_shots/*",
    "scout/log_files/*",
]

[tool.poetry.dependencies]
python = "<3.13,>=3.11"
annotated-types = "^0.6.0"
anthropic = "^0.23.1"
anyio = "^4.3.0"
cachetools = "^5.3.3"
certifi = "^2024.2.2"
cffi = "^1.16.0"
charset-normalizer = "^3.3.2"
click = "^8.1.7"
cryptography = "^42.0.8"
diskcache = "^5.6.3"
distro = "^1.9.0"
dnspython = "^2.6.1"
docker = "^7.0.0"
email-validator = "^2.2.0"
filelock = "^3.13.3"
fsspec = "^2024.3.1"
google-ai-generativelanguage = "^0.6.2"
google-api-core = "^2.19.0"
google-api-python-client = "^2.127.0"
google-auth = "^2.29.0"
google-auth-httplib2 = "^0.2.0"
google-generativeai = "^0.5.1"
googleapis-common-protos = "^1.63.0"
greenlet = "^3.0.3"
grpcio = "^1.63.0"
grpcio-status = "^1.62.2"
h11 = "^0.14.0"
httpcore = "^1.0.4"
httplib2 = "^0.22.0"
httptools = "^0.6.1"
httpx = "^0.27.0"
huggingface-hub = "^0.22.2"
idna = "^3.6"
jinja2 = "^3.1.4"
joblib = "^1.3.2"
markdown-it-py = "^3.0.0"
markupsafe = "^2.1.5"
mdurl = "^0.1.2"
nest-asyncio = "^1.6.0"
nltk = "^3.8.1"
numpy = "^1.26.4"
openai = "^1.47.0"
packaging = "^23.2"
pdfminer-six = "^20231228"
pdfplumber = "^0.11.1"
pillow = "^10.3.0"
playwright = "^1.44.0"
proto-plus = "^1.23.0"
protobuf = "^4.25.3"
pyasn1 = "^0.6.0"
pyasn1-modules = "^0.4.0"
pycparser = "^2.22"
pydantic = "^2.6.2"
pydantic-core = "^2.16.3"
pyee = "^11.1.0"
pygments = "^2.18.0"
pyparsing = "^3.1.2"
pypdfium2 = "^4.30.0"
python-dotenv = "^1.0.0"
python-json-logger = "^2.0.7"
python-multipart = "^0.0.9"
pyyaml = "^6.0.1"
regex = "^2023.12.25"
requests = "^2.31.0"
rich = "^13.7.1"
rsa = "^4.9"
shellingham = "^1.5.4"
sniffio = "^1.3.1"
starlette = "^0.37.2"
tabulate = "^0.9.0"
termcolor = "^2.4.0"
tiktoken = "^0.6.0"
tokenizers = "^0.15.2"
tqdm = "^4.66.2"
typer = "^0.12.3"
uritemplate = "^4.1.1"
urllib3 = "^2.2.3"
uvicorn = "^0.30.3"
uvloop = "^0.21.0"
watchfiles = "^0.24.0"
websockets = "^13.1"
typing-extensions = "^4.12.2"
autogen-agentchat = {extras = ["long-context", "graph", "anthropic", "groq"], version = "^0.2.0"}
build = "^1.2.2.post1"
sqlalchemy = "^2.0.36"
asyncpg = "^0.30.0"
aiomysql = "^0.2.0"
aiosqlite = "^0.20.0"
pymupdf = "^1.24.13"
junitparser = "^3.2.0"
pytest-playwright = "^0.5.2"
sentry-sdk = "^2.18.0"
setuptools = "^75.3.0"
wheel = "^0.44.0"
playwright-recaptcha = "^0.5.1"
twine = "^5.1.1"
junit2html = "^31.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
coverage = "^7.6.4"
black = "^24.10.0"
isort = "^5.13.2"
pytest-cov = "^6.0.0"
mypy = "^1.13.0"
gitchangelog = "^3.0.4"
mkdocs = "^1.6.1"
ipdb = "^0.13.13"
twine = "^5.1.1"
deptry = "^0.21.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
testzeus-hercules = 'testzeus_hercules.__main__:main'

[tool.isort]
profile = "black"
multi_line_output = 3
src_paths = ["testzeusagent",]

[tool.mypy]
strict = true
ignore_missing_imports = true
allow_subclassing_any = true
allow_untyped_calls = true
pretty = true
show_error_codes = true
implicit_reexport = true
allow_untyped_decorators = true
warn_unused_ignores = false
warn_return_any = false
namespace_packages = false

[tool.ruff]
# List of enabled rulsets.
# See https://docs.astral.sh/ruff/rules/ for more information.
lint.select = [
    "E",   # Error
    "F",   # Pyflakes
    "W",   # Pycodestyle
    "C90", # McCabe complexity
    "I",   # Isort
    "N",   # pep8-naming
    "D",   # Pydocstyle
    "ANN", # Pytype annotations
    "S",   # Bandit
    "B",   # Bugbear
    "COM", # Commas
    "C4",  # Comprehensions
    "ISC", # Implicit string concat
    "PIE", # Unnecessary code
    "T20", # Catch prints
    "PYI", # validate pyi files
    "Q",   # Checks for quotes
    "RSE", # Checks raise statements
    "RET", # Checks return statements
    "SLF", # Self checks
    "SIM", # Simplificator
    "PTH", # Pathlib checks
    "ERA", # Checks for commented out code
    "PL",  # PyLint checks
    "RUF", # Specific to Ruff checks
]
lint.ignore = [
    "D105",    # Missing docstring in magic method
    "D107",    # Missing docstring in __init__
    "B008",    # Do not perform function calls in argument defaults
    "D211",    # No blank lines allowed before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D401",    # First line should be in imperative mood
    "D104",    # Missing docstring in public package
    "D100",    # Missing docstring in public module
    "D202",    # No blank lines allowed after function docstring
    "ANN102",  # Missing type annotation for self in method
    "ANN101",  # Missing type annotation for argument
    "ANN401",  # typing.Any are disallowed in `**kwargs
    "PLR0913", # Too many arguments for function call
    "D106",    # Missing docstring in public nested class
]
exclude = [
    "testzeusagent/db/migrations",
    ".venv/"
]
lint.mccabe = { max-complexity = 10 }
line-length = 88

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "S101", # Use of assert detected
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"
ignore-decorators = ["typing.overload"]

[tool.ruff.lint.pylint]
allow-magic-value-types = ["int", "str", "float", "bytes"]